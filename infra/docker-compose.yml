version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: nutritional_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: nutritional_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: nutritional_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../database/seeds.sql:/docker-entrypoint-initdb.d/02-seeds.sql
    ports:
      - "5432:5432"
    networks:
      - nutrition-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nutritional_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: nutritional_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:nutritional_password_2024@db:5432/nutritional_db
      SECRET_KEY: nutritional_secret_key_2024_very_secure
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      PYTHONPATH: /app
      ENVIRONMENT: development
    volumes:
      - ../backend:/app
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nutrition-network
    working_dir: /app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level info

  # Next.js Frontend
  frontend:
    build:
      context: ..
      dockerfile: infra/Dockerfile.frontend
    container_name: nutritional_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_APP_NAME: Sistema Nutricional Infantil
      NEXT_PUBLIC_VERSION: 1.0.0
    volumes:
      - ..:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - nutrition-network
    working_dir: /app
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nutritional_nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - nutrition-network

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  nutrition-network:
    driver: bridge
